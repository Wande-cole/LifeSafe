/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.lifesafe;

import java.awt.Color;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.sql.Connection;
import java.sql.Date;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author WANDE
 */
public class Symptoms extends javax.swing.JFrame {

	Connection conn = null;
	Statement stmt = null;
	ResultSet rs = null;
	private boolean detailsComplete = false;
	private int SymptomCount = 0;
	private int patientIdentity = 0;
	private boolean HD = false, AN = false, CD = false, ST = false, CO = false, DI = false, AP = false, VO = false, BA = false, BT = false, DZ = false, IN = false;//symptoms
	private String HHD = "No", AAN = "No", CCD = "No", SST = "No", CCO = "No", DDI = "No", AAP = "No", VVO = "No", BBA = "No", BBT = "No", DDZ = "No", IIN = "No";
	private String pCode = null;
	private String diagnosis = null;

	/**
	 * Creates new form Symptoms
	 */
	public Symptoms() {
		initComponents();
	}

	/**
	 * This method is called from within the
	 * constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The
	 * content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        fName = new javax.swing.JTextField();
        lName = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        dob = new org.jdesktop.swingx.JXDatePicker();
        jLabel4 = new javax.swing.JLabel();
        temperature = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel5 = new javax.swing.JLabel();
        headache = new javax.swing.JCheckBox();
        cold = new javax.swing.JCheckBox();
        cough = new javax.swing.JCheckBox();
        appetite = new javax.swing.JCheckBox();
        bodyache = new javax.swing.JCheckBox();
        dizziness = new javax.swing.JCheckBox();
        anaemia = new javax.swing.JCheckBox();
        stool = new javax.swing.JCheckBox();
        diarrhoea = new javax.swing.JCheckBox();
        vomitting = new javax.swing.JCheckBox();
        bittertaste = new javax.swing.JCheckBox();
        inflammation = new javax.swing.JCheckBox();
        jLabel9 = new javax.swing.JLabel();
        weight = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        height = new javax.swing.JTextField();
        resetBtn = new javax.swing.JButton();
        submitBtn = new javax.swing.JButton();
        saveToFileBtn = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        prescriptionArea = new javax.swing.JTextArea();
        jLabel6 = new javax.swing.JLabel();
        patientCode = new javax.swing.JTextField();
        searchBtn = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        status = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        viewPatients = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("LifeSafe Diagnostics");
        setName("LifeSafe Diagnosis"); // NOI18N
        setResizable(false);

        jLabel1.setText("First Name");

        fName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fNameActionPerformed(evt);
            }
        });

        jLabel2.setText("Last Name");

        jLabel3.setText("Date of Birth");

        jLabel4.setText("Temperature (C)");

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Symptoms");

        headache.setText("Head ache");

        cold.setText("Cold/Catarrh");

        cough.setText("Cough");

        appetite.setText("Lost Appetite");

        bodyache.setText("Body ache");

        dizziness.setText("Dizziness");

        anaemia.setText("Anaemia");

        stool.setText("Stool");

        diarrhoea.setText("Diarrhoea");

        vomitting.setText("Vomitting");

        bittertaste.setText("Bitter taste");

        inflammation.setText("Inflammation");
        inflammation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inflammationActionPerformed(evt);
            }
        });

        jLabel9.setText("Weight (Kg)");

        jLabel10.setText("Height (cm)");

        resetBtn.setForeground(new java.awt.Color(255, 0, 0));
        resetBtn.setText("Reset");
        resetBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetBtnActionPerformed(evt);
            }
        });

        submitBtn.setForeground(new java.awt.Color(0, 204, 0));
        submitBtn.setText("Submit");
        submitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitBtnActionPerformed(evt);
            }
        });

        saveToFileBtn.setForeground(new java.awt.Color(0, 0, 0));
        saveToFileBtn.setText("Save to file");
        saveToFileBtn.setEnabled(false);
        saveToFileBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveToFileBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(headache)
                                    .addComponent(cold)
                                    .addComponent(cough))
                                .addGap(124, 124, 124)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(diarrhoea)
                                    .addComponent(stool)
                                    .addComponent(anaemia)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(appetite, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(bodyache, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(dizziness, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(resetBtn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(120, 120, 120)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(bittertaste)
                                            .addComponent(vomitting)
                                            .addComponent(inflammation)))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(submitBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(saveToFileBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(0, 86, Short.MAX_VALUE))
                    .addComponent(jSeparator1)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 95, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lName)
                            .addComponent(fName)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(weight, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(dob, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(temperature)
                                    .addComponent(height))))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(fName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(lName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(dob, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(temperature, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(weight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(height, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(headache)
                    .addComponent(anaemia))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cold)
                    .addComponent(stool))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cough)
                    .addComponent(diarrhoea))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(appetite)
                    .addComponent(vomitting))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bodyache)
                    .addComponent(bittertaste))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dizziness)
                    .addComponent(inflammation))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(resetBtn)
                    .addComponent(submitBtn)
                    .addComponent(saveToFileBtn))
                .addContainerGap())
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Prescription");

        prescriptionArea.setEditable(false);
        prescriptionArea.setColumns(20);
        prescriptionArea.setFont(new java.awt.Font("Candara", 0, 12)); // NOI18N
        prescriptionArea.setLineWrap(true);
        prescriptionArea.setRows(5);
        prescriptionArea.setBorder(null);
        jScrollPane1.setViewportView(prescriptionArea);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 312, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLabel6.setText("Patient Code");

        searchBtn.setText("Search");
        searchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBtnActionPerformed(evt);
            }
        });

        jLabel8.setText("Status:");

        status.setText("OK");

        jMenu1.setText("File");
        jMenu1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu1ActionPerformed(evt);
            }
        });

        viewPatients.setText("View Patients");
        viewPatients.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewPatientsActionPerformed(evt);
            }
        });
        jMenu1.add(viewPatients);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("About");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(searchBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(patientCode)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGap(18, 18, 18)
                        .addComponent(status, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(13, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(patientCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(searchBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(status))
                .addGap(8, 8, 8))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void fNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fNameActionPerformed
		// TODO add your handling code here:
    }//GEN-LAST:event_fNameActionPerformed

    private void inflammationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inflammationActionPerformed
		// TODO add your handling code here:
    }//GEN-LAST:event_inflammationActionPerformed

    private void searchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBtnActionPerformed
		if (!patientCode.getText().isEmpty()) {
			int patientID = Integer.parseInt(patientCode.getText());//get patient code from field
			DBConnect con = new DBConnect();
			conn = con.connect();//connect to DB
			try {
				stmt = conn.createStatement();
				String sql = "SELECT * FROM patient WHERE idPatient= '" + patientID + "'";//get patient details from DB
				rs = stmt.executeQuery(sql);

				if (rs.next()) {
					fName.setText(rs.getString("fName"));
					lName.setText(rs.getString("lName"));
					dob.setDate(rs.getDate("dateOfBirth"));
					fName.setEditable(false);
					lName.setEditable(false);
					dob.setEditable(false);
					patientCode.setEditable(false);
				} else {
					JOptionPane.showMessageDialog(null, "Patient code not found");
					patientCode.setText("");
					fName.setText("");
					lName.setText("");
					dob.setDate(null);
				}
				conn.close();

			} catch (SQLException ex) {
				Logger.getLogger(Symptoms.class.getName()).log(Level.SEVERE, null, ex);
			}
		} else {
			status.setText("Enter a value in Patient code field");
			status.setForeground(new java.awt.Color(255, 0, 0));
		}

    }//GEN-LAST:event_searchBtnActionPerformed

    private void submitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitBtnActionPerformed
		
		checkDetails();//check patient details are entered, else warn
		//JOptionPane.showMessageDialog(null, "SymCount");
		int symCount = countSymptoms();//count checked symptoms
		

		if (detailsComplete == true && symCount > 0) {
			//JOptionPane.showMessageDialog(null, symCount);
			float Temp = Float.valueOf(temperature.getText());
			float Weight = Float.valueOf(weight.getText());
			float Height = Float.valueOf(height.getText());

			if (patientCode.getText().isEmpty()) {//assign patient a code if none
				String FN = fName.getText();
				String LN = lName.getText();
				//Date DOB = (Date) dob.getDate();
				SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd");
				String DOB = dateFormat.format(dob.getDate());

				DBConnect con = new DBConnect();
				conn = con.connect();
				try {
					stmt = conn.createStatement();
					
					String sql = "SELECT COUNT(*) AS lastID FROM PATIENT ";
					rs = stmt.executeQuery(sql);
					if(rs.next()){
						patientIdentity = rs.getInt("lastID") + 1;//get patientID for diagnosis
						JOptionPane.showMessageDialog(null, "Code: " + patientIdentity);
					}
					pCode = FN + LN + String.valueOf(dob.getY());
					String sql1 = "INSERT INTO PATIENT"
						 + "(fName, lName, dateOfBirth, PatientCode)"
						 + "VALUES ('" + FN + "', '" + LN + "','" + DOB + "', '" + pCode + "')";

					
					stmt.execute(sql1);
					conn.close();
					JOptionPane.showMessageDialog(null, "Patient record added to database");
					patientCode.setText(String.valueOf(patientIdentity));

				} catch (SQLException ex) {
					JOptionPane.showMessageDialog(null, ex);
				}
			} else {
				patientIdentity = Integer.parseInt(patientCode.getText());
			}
			patientCode.setEditable(false);

			getSymptoms();//gets the symptoms which have been checked
			diagnosis = getDiagnosis();//get diagnosis
			recordDiagnosis(Temp, Weight, Height, HHD, AAN, CCD, SST, CCO, DDI, AAP, VVO, BBA, BBT, DDZ, IIN, diagnosis);//sends details, symptoms and diagnosis to DB
			saveToFileBtn.setEnabled(true);
			submitBtn.setEnabled(false);
			//diagnose
			//give prescription
		}


    }//GEN-LAST:event_submitBtnActionPerformed

    private void resetBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetBtnActionPerformed
        fName.setText("");
		fName.setEditable(true);
		lName.setText("");
		lName.setEditable(true);
		patientCode.setText("");
		patientCode.setEditable(true);
		patientIdentity = 0;
		dob.setDate(null);
		dob.setEditable(true);
		temperature.setText("");
		weight.setText("");
		height.setText("");
		headache.setSelected(false);
		anaemia.setSelected(false);
		cold.setSelected(false);
		stool.setSelected(false);
		cough.setSelected(false);
		diarrhoea.setSelected(false);
		appetite.setSelected(false);
		vomitting.setSelected(false);
		bodyache.setSelected(false);
		bittertaste.setSelected(false);
		dizziness.setSelected(false);
		inflammation.setSelected(false);
		prescriptionArea.setText("");
		submitBtn.setEnabled(true);
		saveToFileBtn.setEnabled(true);
    }//GEN-LAST:event_resetBtnActionPerformed

    private void saveToFileBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveToFileBtnActionPerformed
        String FN = fName.getText();
		String LN = lName.getText();
		String PC = patientCode.getText();
		String Temp = temperature.getText();
		String Weight = weight.getText();
		String Height = height.getText();
		String Prescription = prescriptionArea.getText();
		
		SimpleDateFormat todayDateFormat = new SimpleDateFormat("yyyy-MM-dd HH-mm-ss");
		String todayDate = todayDateFormat.format(new java.util.Date());
		String filename = FN + "" + LN + todayDate + ".txt";
		File patientFile = new File(filename);
		try {
			FileWriter saveToFile = new FileWriter(patientFile);
			BufferedWriter writeToFile = new BufferedWriter(saveToFile);
			writeToFile.write("First name: " + FN);
			writeToFile.newLine();
			writeToFile.write("Last name: " + LN);
			writeToFile.newLine();
			writeToFile.write("Patient Code: " + PC);
			writeToFile.newLine();
			writeToFile.write("Temperature: " + Temp);
			writeToFile.newLine();
			writeToFile.write("Weight: " + Weight);
			writeToFile.newLine();
			writeToFile.write("Height: " + Height);
			writeToFile.newLine();
			writeToFile.write("Headache: " + HHD);
			writeToFile.newLine();
			writeToFile.write("Anaemia: " + AAN);
			writeToFile.newLine();
			writeToFile.write("Cold/Catarrh: " + CCD);
			writeToFile.newLine();
			writeToFile.write("Stool: " + SST);
			writeToFile.newLine();
			writeToFile.write("Cough: " + CCO);
			writeToFile.newLine();
			writeToFile.write("Diarrhoea: " + DDI);
			writeToFile.newLine();
			writeToFile.write("Lost appetite: " + AAP);
			writeToFile.newLine();
			writeToFile.write("Vomitting: " + VVO);
			writeToFile.newLine();
			writeToFile.write("Body ache: " + BBA);
			writeToFile.newLine();
			writeToFile.write("Bitter taste: " + BBT);
			writeToFile.newLine();
			writeToFile.write("Dizzines: " + DDZ);
			writeToFile.newLine();
			writeToFile.write("Inflammation: " + IIN);
			writeToFile.newLine();
			writeToFile.write("Prescription:");
			writeToFile.newLine();
			writeToFile.write(Prescription);
			writeToFile.close();
			JOptionPane.showMessageDialog(null, "Success: Data saved to file.");
			saveToFileBtn.setEnabled(false);
		} catch (Exception ex) {
			JOptionPane.showMessageDialog(null, "Error: " + ex);
		}
    }//GEN-LAST:event_saveToFileBtnActionPerformed

    private void jMenu1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu1ActionPerformed
        
    }//GEN-LAST:event_jMenu1ActionPerformed

    private void viewPatientsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewPatientsActionPerformed
        Patients viewAllPatients = new Patients();
		viewAllPatients.setVisible(true);
    }//GEN-LAST:event_viewPatientsActionPerformed

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
		//<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
		 * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Windows".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(Symptoms.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(Symptoms.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(Symptoms.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(Symptoms.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		//</editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new Symptoms().setVisible(true);
			}
		});
	}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox anaemia;
    private javax.swing.JCheckBox appetite;
    private javax.swing.JCheckBox bittertaste;
    private javax.swing.JCheckBox bodyache;
    private javax.swing.JCheckBox cold;
    private javax.swing.JCheckBox cough;
    private javax.swing.JCheckBox diarrhoea;
    private javax.swing.JCheckBox dizziness;
    private org.jdesktop.swingx.JXDatePicker dob;
    private javax.swing.JTextField fName;
    private javax.swing.JCheckBox headache;
    private javax.swing.JTextField height;
    private javax.swing.JCheckBox inflammation;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField lName;
    private javax.swing.JTextField patientCode;
    private javax.swing.JTextArea prescriptionArea;
    private javax.swing.JButton resetBtn;
    private javax.swing.JButton saveToFileBtn;
    private javax.swing.JButton searchBtn;
    private javax.swing.JLabel status;
    private javax.swing.JCheckBox stool;
    private javax.swing.JButton submitBtn;
    private javax.swing.JTextField temperature;
    private javax.swing.JMenuItem viewPatients;
    private javax.swing.JCheckBox vomitting;
    private javax.swing.JTextField weight;
    // End of variables declaration//GEN-END:variables

	private void checkDetails() {
		if (!fName.getText().isEmpty() && !lName.getText().isEmpty() && dob.getDate() != null && !temperature.getText().isEmpty() && !weight.getText().isEmpty() && !height.getText().isEmpty()) {
			detailsComplete = true;
		}else{
			JOptionPane.showMessageDialog(null, "All patient details are required");
			status.setText("Input all patient details");
			status.setForeground(new java.awt.Color(255, 0, 0));
		}
	}

	private int countSymptoms() {
		if (headache.isSelected()) {
			SymptomCount++;
		}
		if (anaemia.isSelected()) {
			SymptomCount++;
		}
		if (cold.isSelected()) {
			SymptomCount++;
		}
		if (stool.isSelected()) {
			SymptomCount++;
		}
		if (cough.isSelected()) {
			SymptomCount++;
		}
		if (diarrhoea.isSelected()) {
			SymptomCount++;
		}
		if (appetite.isSelected()) {
			SymptomCount++;
		}
		if (vomitting.isSelected()) {
			SymptomCount++;
		}
		if (bodyache.isSelected()) {
			SymptomCount++;
		}
		if (bittertaste.isSelected()) {
			SymptomCount++;
		}
		if (dizziness.isSelected()) {
			SymptomCount++;
		}
		if (inflammation.isSelected()) {
			SymptomCount++;
		}

		if (SymptomCount < 1) {//if symptoms less than 1, please select symptoms
			JOptionPane.showMessageDialog(null, "You must select at least one symptom");
			status.setText("Select at least one symptom");
			status.setForeground(Color.red);
		}
		return SymptomCount;
	}

	private void getSymptoms() {
		if (headache.isSelected()) {
			HD = true;
			HHD = "Yes";
		}
		if (anaemia.isSelected()) {
			AN = true;
			AAN = "Yes";
		}
		if (cold.isSelected()) {
			CD = true;
			CCD = "Yes";
		}
		if (stool.isSelected()) {
			ST = true;
			SST = "Yes";
		}
		if (cough.isSelected()) {
			CO = true;
			CCO = "Yes";
		}
		if (diarrhoea.isSelected()) {
			DI = true;
			DDI = "Yes";
		}
		if (appetite.isSelected()) {
			AP = true;
			AAP = "Yes";
		}
		if (vomitting.isSelected()) {
			VO = true;
			VVO = "Yes";
		}
		if (bodyache.isSelected()) {
			BA = true;
			BBA = "Yes";
		}
		if (bittertaste.isSelected()) {
			BT = true;
			BBT = "Yes";
		}
		if (dizziness.isSelected()) {
			DZ = true;
			DDZ = "Yes";
		}
		if (inflammation.isSelected()) {
			IN = true;
			IIN = "Yes";
		}
	}

	private String getDiagnosis() {
		String diag = null;
		if (HD && !AN && !CD && !ST && !CO && !DI && !AP && !VO && !BA && !BT && !DZ && !IN) {
			//headache alone
			prescriptionArea.setText("--Diagnosis:\nMigraine--"
				 + "\n\n--Prescription--"
				 + "\nParacetamol (2 tabs after every meal for 3 days.)"
				 + "\n\n--Recommendation--"
				 + "\n**No futher**");
			diag = "Headache";
			
		} else if (HD && AN && !CD && !ST && !CO && !DI && AP && !VO && !BA && BT && !DZ && !IN) {
			//Malaria
			prescriptionArea.setText("--Diagnosis:\nMalaria--"
				 + "\n\n--Prescription--"
				 + "\nParacetamol (2 tabs after every meal for 3 days.)"
				 + "\nArtesunate ACT (1 tab after evry meal for 3 days.)"
				 + "\nVitamic-C (2 tabs after every meal for 7 days.)"
				 + "\nBlood tonic (10ml 2 tiems daily for 5 days)"
				 + "\n\n--Recommendation--"
				 + "\n**No futher**");
			diag = "Malaria";
		} else if (DI && VO && ST){
			//Typhoid
			prescriptionArea.setText("--Diagnosis:\nTyphoid--"
				 + "\n\n--Prescription--"
				 + "\nFlagyl (2 tabs after every meal for 3 days.)"
				 + "\nImmodium (1 capsule once a day for 3 days.)"
				 + "\nVitamic-C (2 tabs after every meal for 7 days.)"
				 + "\nBlood tonic (10ml 2 tiems daily for 5 days)"
				 + "\n\n--Recommendation--"
				 + "\n**No futher**");
			diag = "Typhoid";
		} else if(CO && CD){
			//Common cold
			prescriptionArea.setText("--Diagnosis:\nCommon cold with Sinus infection--"
				 + "\n\n--Prescription--"
				 + "\nProcold (2 tabs after every meal for 3 days.)"
				 + "\nVitamic-C (2 tabs after every meal for 7 days.)"
				 + "\nCofta (10ml 2 tiems daily for 5 days)"
				 + "\n\n--Recommendation--"
				 + "\n**No futher**");
			diag = "Common cold";
		} else{
			diag = "Unknown";
			prescriptionArea.setText("--Diagnosis: Unknown--"
				 + "\n\n--Prescription--");
			if(HD) prescriptionArea.setText(prescriptionArea.getText()
				 + "\nParacetamol (2 tabs 3 times daily for 3 days)");
			if(AN) prescriptionArea.setText(prescriptionArea.getText()
				 + "\nBlood tonic (10ml 3 times daily)");
			if(CD) prescriptionArea.setText(prescriptionArea.getText()
				 + "\nVitamin-C (2 tabs, 3 times daily)");
			if(ST) prescriptionArea.setText(prescriptionArea.getText()
				 + "\nFlagyl (2 tabs, 2 times daily for 1 day)");
			if(CO) prescriptionArea.setText(prescriptionArea.getText()
				 + "\nBenelyn (10ml, 3 times daily for 3 days)");
			if(DI) prescriptionArea.setText(prescriptionArea.getText()
				 + "\nImmodium (2 capsules, 3 times daily)");
			if(AP) prescriptionArea.setText(prescriptionArea.getText()
				 + "\nPlease try to eat");
			if(VO) prescriptionArea.setText(prescriptionArea.getText()
				 + "\nActivated charcoal (1 teaspoon in a glass of water, 2 times daily for 1 day)");
			if(BA) prescriptionArea.setText(prescriptionArea.getText()
				 + "\nApply mentholated balm on area");
			if(BT) prescriptionArea.setText(prescriptionArea.getText()
				 + "\nOne glass of ORT solution");
			if(DZ) prescriptionArea.setText(prescriptionArea.getText()
				 + "Rest a while");
			if(IN) prescriptionArea.setText(prescriptionArea.getText()
				 + "Wash affected area with cleam warm water and apply methol");
			prescriptionArea.setText(prescriptionArea.getText() + "\n\nRecommendation--\nSee a doctor as soon as possible");
		}
		return diag;
	}

	private void recordDiagnosis(float temp, float weight, float height, String HHD, String AAN, String CCD, String SST, String CCO, String DDI, String AAP, String VVO, String BBA, String BBT, String DDZ, String IIN, String diagnosis) {
		DBConnect con = new DBConnect();
		conn = con.connect();
		try {
			stmt = conn.createStatement();
			
			String sql3 = "INSERT INTO SYMPTOMS"
				 + "(headache, anaemia, cold, stool, cough, diarrhoea, appetite, "
				 + "vomitting, bodyache, bittertaste, dizziness, inflammation, "
				 + "diagnosis, weight, height, temperature, PatientID)"
				 + " VALUES ('" + HHD + "', '" + AAN + "', '" + CCD + "', '"
				 + SST + "', '" + CCO + "', '" + DDI + "', '" + AAP + "', '"
				 + VVO + "', '" + BBA + "', '" + BBT + "', '" + DDZ + "', '"
				 + IIN + "', '" + diagnosis + "', '" + weight + "', '" 
				 + height + "','" + temp + "', '" + patientIdentity + "')";
			stmt.execute(sql3);
		} catch (SQLException ex) {
			JOptionPane.showMessageDialog(null, ex);
		}
	}
}
